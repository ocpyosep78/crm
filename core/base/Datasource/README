SELECT
	Field name                                                                  e.g. 'user'
	Field name with alias                                                       e.g. "user as 'username'"
	Comma-separated field names (with or without aliases)                       e.g. "user, pass as 'password', profile"

	Array list of fields (with or without aliases)                              e.g. ['user', "pass as 'password'"]
	Array list of "field => alias" pairs                                        e.g. ['user' => 'username', 'pass' => 'password']
	Array mixing the two above                                                  e.g. ["user as 'username'", 'pass' => 'password']



WHERE
	Value of the primary key (only for numeric primary keys)                    e.g. 4
	Literal (simple comparisson operators, BETWEEN and IN() allowed)            e.g. "user IN ('me', 'you')"
	Array list of "field => value" pairs (implicit 'equals')                    e.g. ['user' => 'me']
	Array list of "field => values" pairs (for IN())                            e.g. ['user' => ['me', 'you']]

	NULL, NOT NULL (case insensitive)                                           e.g. "user IS NOT NULL",
                                                                                     "user IS NULL",
                                                                                     ['user' => NULL],
                                                                                     ['user' => 'NULL']

	Shortcut to set value of primary key (numeric or not): Model->setId('some id')



ORDER
	A string finishing in either 'DESC' or 'ASC' (case insensitive)             e.g. 'user ASC', 'profile DESC'



LIMIT
	A single digit (offset := 0)                                                e.g. 20
	A comma-separated pair of digits (offset, count)                            e.g. 0, 20


Special fields: __id__ (primary key), __own__ (fields that are not references to other fields), __ref__ (references to other fields)


For find(), the first param is reserved for filters ("WHERE"). Remaining params can be of any kind but filters, and in any order.